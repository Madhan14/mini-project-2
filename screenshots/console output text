Started by user madhan
Obtained Jenkinsfile from git https://github.com/Madhan14/mini-project-2.git
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/Trend-CICD
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
The recommended git tool is: git
using credential dockerhub-cred
 > git rev-parse --resolve-git-dir /var/lib/jenkins/workspace/Trend-CICD/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/Madhan14/mini-project-2.git # timeout=10
Fetching upstream changes from https://github.com/Madhan14/mini-project-2.git
 > git --version # timeout=10
 > git --version # 'git version 2.43.0'
using GIT_ASKPASS to set credentials 
 > git fetch --tags --force --progress -- https://github.com/Madhan14/mini-project-2.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision ccf768de34eeded840aa7e7047eeac43576e6f27 (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f ccf768de34eeded840aa7e7047eeac43576e6f27 # timeout=10
Commit message: "Update Jenkinsfile"
 > git rev-list --no-walk ccf768de34eeded840aa7e7047eeac43576e6f27 # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Checkout)
[Pipeline] checkout
The recommended git tool is: git
using credential dockerhub-cred
 > git rev-parse --resolve-git-dir /var/lib/jenkins/workspace/Trend-CICD/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/Madhan14/mini-project-2.git # timeout=10
Fetching upstream changes from https://github.com/Madhan14/mini-project-2.git
 > git --version # timeout=10
 > git --version # 'git version 2.43.0'
using GIT_ASKPASS to set credentials 
 > git fetch --tags --force --progress -- https://github.com/Madhan14/mini-project-2.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision ccf768de34eeded840aa7e7047eeac43576e6f27 (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f ccf768de34eeded840aa7e7047eeac43576e6f27 # timeout=10
Commit message: "Update Jenkinsfile"
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build Docker Image)
[Pipeline] sh
+ docker --version
Docker version 27.5.1, build 27.5.1-0ubuntu3~24.04.2
[Pipeline] sh
+ docker build -t madhan14/trend:13 .
DEPRECATED: The legacy builder is deprecated and will be removed in a future release.
            Install the buildx component to build images with BuildKit:
            https://docs.docker.com/go/buildx/

Sending build context to Docker daemon  9.305MB

Step 1/6 : FROM nginx:alpine
 ---> 4a86014ec699
Step 2/6 : RUN rm /etc/nginx/conf.d/default.conf
 ---> Using cache
 ---> ad46b9a7b807
Step 3/6 : COPY nginx.conf /etc/nginx/conf.d/
 ---> Using cache
 ---> 86019dba1c5e
Step 4/6 : COPY dist/ /usr/share/nginx/html
 ---> Using cache
 ---> 9b6e59fd2e54
Step 5/6 : EXPOSE 3000
 ---> Using cache
 ---> be5a21a92d51
Step 6/6 : CMD ["nginx", "-g", "daemon off;"]
 ---> Using cache
 ---> 0eeb55490961
Successfully built 0eeb55490961
Successfully tagged madhan14/trend:13
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Docker Login & Push)
[Pipeline] withCredentials
Masking supported pattern matches of $DOCKER_PASS
[Pipeline] {
[Pipeline] sh
+ docker login -u madhan14 --password-stdin
+ echo ****
WARNING! Your password will be stored unencrypted in /var/lib/jenkins/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credential-stores

Login Succeeded
[Pipeline] sh
+ docker push madhan14/trend:13
The push refers to repository [docker.io/madhan14/trend]
728663a85e95: Preparing
c386fdd18128: Preparing
06a2ab4d8d3d: Preparing
f9985d3fc94d: Preparing
d208138be39d: Preparing
a2b76470e8f1: Preparing
917b2c97271e: Preparing
16ca725632e5: Preparing
7978a9c91f72: Preparing
b6ff0212304e: Preparing
418dccb7d85a: Preparing
a2b76470e8f1: Waiting
917b2c97271e: Waiting
16ca725632e5: Waiting
7978a9c91f72: Waiting
b6ff0212304e: Waiting
418dccb7d85a: Waiting
c386fdd18128: Layer already exists
728663a85e95: Layer already exists
f9985d3fc94d: Layer already exists
d208138be39d: Layer already exists
06a2ab4d8d3d: Layer already exists
917b2c97271e: Layer already exists
7978a9c91f72: Layer already exists
16ca725632e5: Layer already exists
b6ff0212304e: Layer already exists
a2b76470e8f1: Layer already exists
418dccb7d85a: Layer already exists
13: digest: sha256:5eb96207573a306041e35e8cb0ecd0a960f0cd7794b5acc49694ef880a3af7c9 size: 2614
[Pipeline] sh
+ docker tag madhan14/trend:13 madhan14/trend:latest
[Pipeline] sh
+ docker push madhan14/trend:latest
The push refers to repository [docker.io/madhan14/trend]
728663a85e95: Preparing
c386fdd18128: Preparing
06a2ab4d8d3d: Preparing
f9985d3fc94d: Preparing
d208138be39d: Preparing
a2b76470e8f1: Preparing
917b2c97271e: Preparing
16ca725632e5: Preparing
7978a9c91f72: Preparing
b6ff0212304e: Preparing
418dccb7d85a: Preparing
917b2c97271e: Waiting
16ca725632e5: Waiting
7978a9c91f72: Waiting
a2b76470e8f1: Waiting
b6ff0212304e: Waiting
418dccb7d85a: Waiting
728663a85e95: Layer already exists
d208138be39d: Layer already exists
c386fdd18128: Layer already exists
06a2ab4d8d3d: Layer already exists
f9985d3fc94d: Layer already exists
a2b76470e8f1: Layer already exists
917b2c97271e: Layer already exists
16ca725632e5: Layer already exists
7978a9c91f72: Layer already exists
b6ff0212304e: Layer already exists
418dccb7d85a: Layer already exists
latest: digest: sha256:5eb96207573a306041e35e8cb0ecd0a960f0cd7794b5acc49694ef880a3af7c9 size: 2614
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy to EKS)
[Pipeline] withCredentials
Masking supported pattern matches of $AWS_SECRET_ACCESS_KEY
[Pipeline] {
[Pipeline] sh
+ set -e
+ export AWS_REGION=ap-south-1
+ export AWS_ACCESS_KEY_ID=AKIAU3LZF33INHLCPXBK
+ export AWS_SECRET_ACCESS_KEY=****
+ aws eks update-kubeconfig --name trend-eks --region ap-south-1
Updated context arn:aws:eks:ap-south-1:333650976464:cluster/trend-eks in /var/lib/jenkins/.kube/config
+ kubectl set image deployment/trend-deployment trend=madhan14/trend:13 --record
Flag --record has been deprecated, --record will be removed in the future
deployment.apps/trend-deployment image updated
+ kubectl apply -f k8s/service.yaml
service/trend-lb unchanged
+ kubectl rollout status deployment/trend-deployment --timeout=180s
Waiting for deployment "trend-deployment" rollout to finish: 1 out of 2 new replicas have been updated...
Waiting for deployment "trend-deployment" rollout to finish: 1 out of 2 new replicas have been updated...
Waiting for deployment "trend-deployment" rollout to finish: 1 out of 2 new replicas have been updated...
Waiting for deployment "trend-deployment" rollout to finish: 1 old replicas are pending termination...
Waiting for deployment "trend-deployment" rollout to finish: 1 old replicas are pending termination...
deployment "trend-deployment" successfully rolled out
+ echo Service info:
Service info:
+ kubectl get svc trend-lb -o wide
NAME       TYPE           CLUSTER-IP       EXTERNAL-IP                                                             PORT(S)        AGE   SELECTOR
trend-lb   LoadBalancer   172.20.243.179   aea410d45be5d49e18c36f5b4537ba19-6337953.ap-south-1.elb.amazonaws.com   80:32395/TCP   40h   app=trend
+ kubectl get pods -l app=trend -o wide
NAME                                READY   STATUS    RESTARTS   AGE   IP           NODE                                       NOMINATED NODE   READINESS GATES
trend-deployment-584b646499-bnbkl   1/1     Running   0          19s   10.0.0.205   ip-10-0-0-43.ap-south-1.compute.internal   <none>           <none>
trend-deployment-584b646499-nvcsk   1/1     Running   0          40s   10.0.0.203   ip-10-0-0-43.ap-south-1.compute.internal   <none>           <none>
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] echo
Pipeline finished successfully.
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
